#!/usr/bin/env bash

export DOTREPO=https://github.com/gschaetz/dotfiles.git
export DOTFILES=~/.dotfiles

backup_dir="$DOTFILES/backups/$(date "+%Y_%m_%d-%H_%M_%S")"

function l_ln()   { echo -e "\n\033[1m$@\033[0m"; }
function l_good() { echo -e "  \033[1;32m✔\033[0m  $@"; }
function l_bad()  { echo -e "  \033[1;31m✖\033[0m  $@"; }
function l_info() { echo -e "  \033[1;34m➜\033[0m  $@"; }

function backupIfNeeded() {
  local dest="$1"; shift
  if [[ -e "$dest" ]]; then
    l_info "Need to backup $dest"
    [[ -d "$backup_dir" ]] || mkdir -p "$backup_dir"
    mv "$dest" "$backup_dir"
  fi
}

function copy_one() {
  local file="$1"; shift
  local dest="$HOME/.$(basename $file)"
  backupIfNeeded "$dest"
  l_good "Copying $file to $dest"
  if [[ -d "$file" ]]; then
    cp -r "$file" "$dest"
  else
    cp "$file" "$dest"
  fi
}

function link_one() {
  local file="$1"; shift
  local dest="$HOME/.$(basename $file)"
  backupIfNeeded "$dest"
  l_good "Linking $file to $dest"
  ln -s "$file" "$dest"
}

function copy_all() {
  local file
  for file in $DOTFILES/link/*; do
    copy_one "$file"
  done
}

function link_all() {
  local file
  for file in $DOTFILES/link/*; do
    link_one "$file"
  done
}

function install() {
  local op="$1"; shift

  if [[ -d "$DOTFILES" ]]; then
    cd "$DOTFILES"
    l_ln "Updating from repo"
    git pull
    #git submodule update --init --recursive --rebase --quiet
    git submodule update --init --recursive --remote --rebase --quiet
  else
    l_ln "Cloning from repo"
    git clone --recursive "$DOTREPO" "$DOTFILES"
    cd "$DOTFILES"
  fi

  if [[ "$op" = "copy" ]]; then
    copy_all
  elif [[ "$op" = "link" ]]; then
    link_all
  else
    l_ln "no operation selected"
    l_ln "tell me to 'copy' or 'link' files"
  fi

  if [[ -d "$backup_dir" ]]; then
    l_ln "The following files are backed up to $backup_dir"
    ls -lFbA "$backup_dir"
  fi

  l_ln "All Done!"
  l_ln "Look in $DOTFILES/templates directory to create local configuration overrides based on templates"
}

install "$@"
